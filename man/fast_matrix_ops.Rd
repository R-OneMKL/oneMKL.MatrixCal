% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{fast_matrix_ops}
\alias{fast_matrix_ops}
\alias{fMatProd}
\alias{fMatTransProd}
\alias{fMatSolve}
\alias{fMatInv}
\alias{fMatAdd}
\alias{fMatSubtract}
\alias{fMatRowSum}
\alias{fMatColSum}
\alias{fMatRowMin}
\alias{fMatColMin}
\alias{fMatRowMax}
\alias{fMatColMax}
\alias{fMatDet}
\alias{fMatRank}
\alias{fMatRCond}
\title{Functions that use oneMKL for fast matrix calculations}
\usage{
fMatProd(X, Y)

fMatTransProd(X, Y)

fMatSolve(X, Y, is_sym_pd = FALSE, is_invertible = FALSE)

fMatInv(X, is_sym_pd = FALSE)

fMatAdd(X, Y)

fMatSubtract(X, Y)

fMatRowSum(X)

fMatColSum(X)

fMatRowMin(X)

fMatColMin(X)

fMatRowMax(X)

fMatColMax(X)

fMatDet(X)

fMatRank(X)

fMatRCond(X)
}
\arguments{
\item{X, Y}{matrices}

\item{is_sym_pd}{specific whether the input matrix is symmetric/Hermitian positive definite.
Enabling this option can result in faster computation if the matrix satisfies these properties.}

\item{is_invertible}{specify whether to enable faster computation of the linear model solution
by disabling the use of rcond, iterative refinement, and equilibration.}
}
\value{
The result matrices
}
\description{
Functions that use oneMKL for fast matrix calculations
}
\examples{
x <- matrix(rnorm(1e4), 100)
y <- matrix(rnorm(1e2), 100)
z <- matrix(rnorm(1e4), 100)
XtX <- fMatProd(t(x), x)
XtX2 <- fMatTransProd(x, x)
all.equal(XtX, XtX2) # TRUE
invXtX <- fMatInv(XtX)
fMatAdd(x, z) # x + z
fMatSubtract(x, z) # x - z
fMatRowSum(x) # rowSums(x)
fMatRowMin(x) # apply(x, 1, min)
fMatRowMax(x) # apply(x, 1, max)
fMatColMin(x) # apply(x, 2, min)
fMatColMax(x) # apply(x, 2, max)
fMatRank(x)
}
